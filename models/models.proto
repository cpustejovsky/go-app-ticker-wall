syntax = "proto3";

package models;

service TickerWallLeader {
    // Register our screen and listen for update events.
    rpc RegisterAndListenForUpdates(Screen) returns (stream Update) {}

    // Get our current list of tickers.
    rpc GetTickers(Screen) returns (Tickers) {} 
}

// Ticker is used to update a tickers information ( leader -> follower ).
message Ticker {
    string Ticker = 1;
    string CompanyName = 2;
    double Price = 3;
    double PriceChangePercentage = 4;
    double PreviousClosePrice = 5;
    int32 Index = 6;
}
message Tickers {
    repeated Ticker Tickers = 1;
}

// Update is a generalized container for all update types.
message Update {
    // Defines which type of update this is.
    int32 UpdateType = 1;

    // Screen Cluster Information.
    ScreenCluster ScreenCluster = 2;

    // Ticker Update Information.
    Ticker Ticker = 3;
}

// Screen contains all screen information about an individual screen.
message Screen {
    int32 Width = 1;
    int32 Height = 2;
    int32 Index = 3;
    int64 ScreenGlobalOffset = 4; // This screens (0,0) offset in context of the cluster.
}

// ScreenCluster contains information about the whole screen cluster.
message ScreenCluster {
    int32 NumberOfScreens = 1;
    int32 TickerBoxWidth = 2;
    int64 GlobalViewportSize = 3;
    int32 ScrollSpeed = 4;

    repeated Screen Screens = 5;
}